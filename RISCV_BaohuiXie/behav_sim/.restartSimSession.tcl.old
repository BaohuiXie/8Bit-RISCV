# Begin_DVE_Session_Save_Info
# DVE restart session
# Saved on Mon May 30 00:12:11 2022
# Designs open: 1
#   Sim: /afs/ee.ust.hk/staff/ee/bxieaf/eesm5020/risc_baohui/behav_sim/simv
# Toplevel windows open: 2
# 	TopLevel.1
# 	TopLevel.2
#   Source.1: riscv8bit_tb.input_stimulus
#   Wave.1: 5 signals
#   Group count = 6
#   Group riscv8bit_tb signal count = 19
#   Group data_memory1 signal count = 8
#   Group registerfile1 signal count = 10
#   Group ifid1 signal count = 6
#   Group pc1 signal count = 3
#   Group instruction_memory1 signal count = 5
# End_DVE_Session_Save_Info

# DVE version: Q-2020.03-SP1-1_Full64
# DVE build date: Jul 19 2020 21:06:08


#<Session mode="Restart" path=".restartSimSession.tcl" type="Debug">

gui_set_loading_session_type Restart
gui_continuetime_set
gui_clear_window -type Wave
gui_clear_window -type List

# Application preferences
gui_set_pref_value -key app_default_font -value {Helvetica,10,-1,5,50,0,0,0,0,0}
gui_src_preferences -tabstop 8 -maxbits 24 -windownumber 1
#<WindowLayout>

# DVE top-level session


# Create and position top-level window: TopLevel.1

set TopLevel.1 TopLevel.1

# Docked window settings
set HSPane.1 HSPane.1
set Hier.1 Hier.1
set DLPane.1 DLPane.1
set Data.1 Data.1
set Console.1 Console.1
gui_sync_global -id ${TopLevel.1} -option true

# MDI window settings
set Source.1 Source.1
gui_update_layout -id ${Source.1} {{show_state maximized} {dock_state undocked} {dock_on_new_line false}}

# End MDI window settings


# Create and position top-level window: TopLevel.2

set TopLevel.2 TopLevel.2

# Docked window settings
gui_sync_global -id ${TopLevel.2} -option true

# MDI window settings
set Wave.1 Wave.1
gui_update_layout -id ${Wave.1} {{show_state maximized} {dock_state undocked} {dock_on_new_line false} {child_wave_left 477} {child_wave_right 1162} {child_wave_colname 236} {child_wave_colvalue 236} {child_wave_col1 0} {child_wave_col2 1}}

# End MDI window settings


#</WindowLayout>

#<Database>

gui_set_precision 1ps
gui_set_time_units 1ps
#</Database>

# DVE Global setting session: 


# Global: Breakpoints

# Global: Bus

# Global: Expressions

# Global: Signal Time Shift

# Global: Signal Compare

# Global: Signal Groups
gui_load_child_values {riscv8bit_tb.data_memory1}
gui_load_child_values {riscv8bit_tb.uut.id_to_wb1.id_and_ex1.exmem1}
gui_load_child_values {riscv8bit_tb.instruction_memory1}
gui_load_child_values {riscv8bit_tb.uut.id_to_wb1.id_and_ex1.id1.idex1}
gui_load_child_values {riscv8bit_tb.uut.id_to_wb1.id_and_ex1.id1.ifid1}
gui_load_child_values {riscv8bit_tb.uut.id_to_wb1.id_and_ex1.id1.registerfile1}
gui_load_child_values {riscv8bit_tb.uut.pc1}
gui_load_child_values {riscv8bit_tb}
gui_load_child_values {riscv8bit_tb.uut.id_to_wb1.memwb1}


set _session_group_19 riscv8bit_tb
gui_sg_create "$_session_group_19"
set riscv8bit_tb "$_session_group_19"

gui_sg_addsignal -group "$_session_group_19" { riscv8bit_tb.rst_registerfile riscv8bit_tb.instruction_input_wire riscv8bit_tb.mem_read_from_idandex riscv8bit_tb.result_from_RAM riscv8bit_tb.pc_increment_address_reg riscv8bit_tb.ram_data_wire riscv8bit_tb.write_data_to_memory_reg riscv8bit_tb.mem_write_from_idandex_reg riscv8bit_tb.alu_result_from_idandex riscv8bit_tb.clk riscv8bit_tb.mem_read_from_idandex_reg riscv8bit_tb.ram_data riscv8bit_tb.mem_write_from_idandex riscv8bit_tb.write_data_to_memory riscv8bit_tb.pc_increment_address riscv8bit_tb.alu_result_from_idandex_reg riscv8bit_tb.instruction_input riscv8bit_tb.CLK_PERIOD riscv8bit_tb.rst }
gui_set_radix -radix {decimal} -signals {Sim:riscv8bit_tb.instruction_input_wire}
gui_set_radix -radix {unsigned} -signals {Sim:riscv8bit_tb.instruction_input_wire}
gui_set_radix -radix {decimal} -signals {Sim:riscv8bit_tb.result_from_RAM}
gui_set_radix -radix {unsigned} -signals {Sim:riscv8bit_tb.result_from_RAM}
gui_set_radix -radix {decimal} -signals {Sim:riscv8bit_tb.pc_increment_address_reg}
gui_set_radix -radix {unsigned} -signals {Sim:riscv8bit_tb.pc_increment_address_reg}
gui_set_radix -radix {decimal} -signals {Sim:riscv8bit_tb.ram_data_wire}
gui_set_radix -radix {unsigned} -signals {Sim:riscv8bit_tb.ram_data_wire}
gui_set_radix -radix {decimal} -signals {Sim:riscv8bit_tb.write_data_to_memory_reg}
gui_set_radix -radix {unsigned} -signals {Sim:riscv8bit_tb.write_data_to_memory_reg}
gui_set_radix -radix {decimal} -signals {Sim:riscv8bit_tb.alu_result_from_idandex}
gui_set_radix -radix {unsigned} -signals {Sim:riscv8bit_tb.alu_result_from_idandex}
gui_set_radix -radix {decimal} -signals {Sim:riscv8bit_tb.ram_data}
gui_set_radix -radix {unsigned} -signals {Sim:riscv8bit_tb.ram_data}
gui_set_radix -radix {decimal} -signals {Sim:riscv8bit_tb.write_data_to_memory}
gui_set_radix -radix {unsigned} -signals {Sim:riscv8bit_tb.write_data_to_memory}
gui_set_radix -radix {decimal} -signals {Sim:riscv8bit_tb.pc_increment_address}
gui_set_radix -radix {unsigned} -signals {Sim:riscv8bit_tb.pc_increment_address}
gui_set_radix -radix {decimal} -signals {Sim:riscv8bit_tb.alu_result_from_idandex_reg}
gui_set_radix -radix {unsigned} -signals {Sim:riscv8bit_tb.alu_result_from_idandex_reg}
gui_set_radix -radix {decimal} -signals {Sim:riscv8bit_tb.instruction_input}
gui_set_radix -radix {unsigned} -signals {Sim:riscv8bit_tb.instruction_input}
gui_set_radix -radix {decimal} -signals {Sim:riscv8bit_tb.CLK_PERIOD}
gui_set_radix -radix {twosComplement} -signals {Sim:riscv8bit_tb.CLK_PERIOD}

set _session_group_20 data_memory1
gui_sg_create "$_session_group_20"
set data_memory1 "$_session_group_20"

gui_sg_addsignal -group "$_session_group_20" { riscv8bit_tb.data_memory1.ram_memory riscv8bit_tb.data_memory1.memread riscv8bit_tb.data_memory1.i riscv8bit_tb.data_memory1.read_ram_data riscv8bit_tb.data_memory1.memwrite riscv8bit_tb.data_memory1.address_ram riscv8bit_tb.data_memory1.write_data riscv8bit_tb.data_memory1.rst }
gui_set_radix -radix {decimal} -signals {Sim:riscv8bit_tb.data_memory1.read_ram_data}
gui_set_radix -radix {unsigned} -signals {Sim:riscv8bit_tb.data_memory1.read_ram_data}
gui_set_radix -radix {decimal} -signals {Sim:riscv8bit_tb.data_memory1.address_ram}
gui_set_radix -radix {unsigned} -signals {Sim:riscv8bit_tb.data_memory1.address_ram}
gui_set_radix -radix {decimal} -signals {Sim:riscv8bit_tb.data_memory1.write_data}
gui_set_radix -radix {unsigned} -signals {Sim:riscv8bit_tb.data_memory1.write_data}

set _session_group_21 registerfile1
gui_sg_create "$_session_group_21"
set registerfile1 "$_session_group_21"

gui_sg_addsignal -group "$_session_group_21" { riscv8bit_tb.uut.id_to_wb1.id_and_ex1.id1.registerfile1.register_memory riscv8bit_tb.uut.id_to_wb1.id_and_ex1.id1.registerfile1.rd riscv8bit_tb.uut.id_to_wb1.id_and_ex1.id1.registerfile1.rs riscv8bit_tb.uut.id_to_wb1.id_and_ex1.id1.registerfile1.write_address riscv8bit_tb.uut.id_to_wb1.id_and_ex1.id1.registerfile1.clk riscv8bit_tb.uut.id_to_wb1.id_and_ex1.id1.registerfile1.regwrite riscv8bit_tb.uut.id_to_wb1.id_and_ex1.id1.registerfile1.write_data riscv8bit_tb.uut.id_to_wb1.id_and_ex1.id1.registerfile1.read_data_1 riscv8bit_tb.uut.id_to_wb1.id_and_ex1.id1.registerfile1.read_data_2 riscv8bit_tb.uut.id_to_wb1.id_and_ex1.id1.registerfile1.rst }
gui_set_radix -radix {decimal} -signals {Sim:riscv8bit_tb.uut.id_to_wb1.id_and_ex1.id1.registerfile1.rd}
gui_set_radix -radix {unsigned} -signals {Sim:riscv8bit_tb.uut.id_to_wb1.id_and_ex1.id1.registerfile1.rd}
gui_set_radix -radix {decimal} -signals {Sim:riscv8bit_tb.uut.id_to_wb1.id_and_ex1.id1.registerfile1.rs}
gui_set_radix -radix {unsigned} -signals {Sim:riscv8bit_tb.uut.id_to_wb1.id_and_ex1.id1.registerfile1.rs}
gui_set_radix -radix {decimal} -signals {Sim:riscv8bit_tb.uut.id_to_wb1.id_and_ex1.id1.registerfile1.write_address}
gui_set_radix -radix {unsigned} -signals {Sim:riscv8bit_tb.uut.id_to_wb1.id_and_ex1.id1.registerfile1.write_address}
gui_set_radix -radix {decimal} -signals {Sim:riscv8bit_tb.uut.id_to_wb1.id_and_ex1.id1.registerfile1.write_data}
gui_set_radix -radix {unsigned} -signals {Sim:riscv8bit_tb.uut.id_to_wb1.id_and_ex1.id1.registerfile1.write_data}
gui_set_radix -radix {decimal} -signals {Sim:riscv8bit_tb.uut.id_to_wb1.id_and_ex1.id1.registerfile1.read_data_1}
gui_set_radix -radix {unsigned} -signals {Sim:riscv8bit_tb.uut.id_to_wb1.id_and_ex1.id1.registerfile1.read_data_1}
gui_set_radix -radix {decimal} -signals {Sim:riscv8bit_tb.uut.id_to_wb1.id_and_ex1.id1.registerfile1.read_data_2}
gui_set_radix -radix {unsigned} -signals {Sim:riscv8bit_tb.uut.id_to_wb1.id_and_ex1.id1.registerfile1.read_data_2}

set _session_group_22 ifid1
gui_sg_create "$_session_group_22"
set ifid1 "$_session_group_22"

gui_sg_addsignal -group "$_session_group_22" { riscv8bit_tb.uut.id_to_wb1.id_and_ex1.id1.ifid1.instruction_ifid_output riscv8bit_tb.uut.id_to_wb1.id_and_ex1.id1.idex1.instruction_idex_output riscv8bit_tb.uut.id_to_wb1.id_and_ex1.exmem1.rd_exmem_output riscv8bit_tb.uut.id_to_wb1.memwb1.rd_memwb_output riscv8bit_tb.uut.id_to_wb1.id_and_ex1.id1.ifid1.clk riscv8bit_tb.uut.id_to_wb1.id_and_ex1.id1.ifid1.rst }

set _session_group_23 pc1
gui_sg_create "$_session_group_23"
set pc1 "$_session_group_23"

gui_sg_addsignal -group "$_session_group_23" { riscv8bit_tb.uut.pc1.clk riscv8bit_tb.uut.pc1.pc_increment_address riscv8bit_tb.uut.pc1.rst }
gui_set_radix -radix {decimal} -signals {Sim:riscv8bit_tb.uut.pc1.pc_increment_address}
gui_set_radix -radix {unsigned} -signals {Sim:riscv8bit_tb.uut.pc1.pc_increment_address}

set _session_group_24 instruction_memory1
gui_sg_create "$_session_group_24"
set instruction_memory1 "$_session_group_24"

gui_sg_addsignal -group "$_session_group_24" { riscv8bit_tb.instruction_memory1.i riscv8bit_tb.instruction_memory1.instruction riscv8bit_tb.instruction_memory1.instruction_address_from_pc riscv8bit_tb.instruction_memory1.rst riscv8bit_tb.instruction_memory1.rom_memory }
gui_set_radix -radix {decimal} -signals {Sim:riscv8bit_tb.instruction_memory1.i}
gui_set_radix -radix {twosComplement} -signals {Sim:riscv8bit_tb.instruction_memory1.i}

# Global: Highlighting

# Global: Stack
gui_change_stack_mode -mode list

# Post database loading setting...

# Save global setting...

# Wave/List view global setting
gui_cov_show_value -switch false

# Close all empty TopLevel windows
foreach __top [gui_ekki_get_window_ids -type TopLevel] {
    if { [llength [gui_ekki_get_window_ids -parent $__top]] == 0} {
        gui_close_window -window $__top
    }
}
gui_set_loading_session_type noSession
# DVE View/pane content session: 


# Hier 'Hier.1'
gui_show_window -window ${Hier.1}
gui_list_set_filter -id ${Hier.1} -list { {Package 1} {All 0} {Process 1} {VirtPowSwitch 0} {UnnamedProcess 1} {UDP 0} {Function 1} {Block 1} {SrsnAndSpaCell 0} {OVA Unit 1} {LeafScCell 1} {LeafVlgCell 1} {Interface 1} {LeafVhdCell 1} {$unit 1} {NamedBlock 1} {Task 1} {VlgPackage 1} {ClassDef 1} {VirtIsoCell 0} }
gui_list_set_filter -id ${Hier.1} -text {*}
gui_change_design -id ${Hier.1} -design Sim
catch {gui_list_expand -id ${Hier.1} riscv8bit_tb}
catch {gui_list_select -id ${Hier.1} {riscv8bit_tb.instruction_memory1}}
gui_view_scroll -id ${Hier.1} -vertical -set 0
gui_view_scroll -id ${Hier.1} -horizontal -set 0

# Data 'Data.1'
gui_list_set_filter -id ${Data.1} -list { {Buffer 1} {Input 1} {Others 1} {Linkage 1} {Output 1} {LowPower 1} {Parameter 1} {All 1} {Aggregate 1} {LibBaseMember 1} {Event 1} {Assertion 1} {Constant 1} {Interface 1} {BaseMembers 1} {Signal 1} {$unit 1} {Inout 1} {Variable 1} }
gui_list_set_filter -id ${Data.1} -text {*}
gui_list_show_data -id ${Data.1} {riscv8bit_tb.instruction_memory1}
gui_view_scroll -id ${Data.1} -vertical -set 0
gui_view_scroll -id ${Data.1} -horizontal -set 0
gui_view_scroll -id ${Hier.1} -vertical -set 0
gui_view_scroll -id ${Hier.1} -horizontal -set 0

# Source 'Source.1'
gui_src_value_annotate -id ${Source.1} -switch false
gui_set_env TOGGLE::VALUEANNOTATE 0
gui_open_source -id ${Source.1}  -replace -active riscv8bit_tb.input_stimulus /afs/ee.ust.hk/staff/ee/bxieaf/eesm5020/risc_baohui/behav_sim/../tb/riscv8bit_tb.v
gui_view_scroll -id ${Source.1} -vertical -set 1605
gui_src_set_reusable -id ${Source.1}

# View 'Wave.1'
gui_wv_sync -id ${Wave.1} -switch false
set groupExD [gui_get_pref_value -category Wave -key exclusiveSG]
gui_set_pref_value -category Wave -key exclusiveSG -value {false}
set origWaveHeight [gui_get_pref_value -category Wave -key waveRowHeight]
gui_list_set_height -id Wave -height 25
set origGroupCreationState [gui_list_create_group_when_add -wave]
gui_list_create_group_when_add -wave -disable
gui_wv_zoom_timerange -id ${Wave.1} 0 380
gui_list_add_group -id ${Wave.1} -after {New Group} {instruction_memory1}
gui_seek_criteria -id ${Wave.1} {Any Edge}



gui_set_env TOGGLE::DEFAULT_WAVE_WINDOW ${Wave.1}
gui_set_pref_value -category Wave -key exclusiveSG -value $groupExD
gui_list_set_height -id Wave -height $origWaveHeight
if {$origGroupCreationState} {
	gui_list_create_group_when_add -wave -enable
}
if { $groupExD } {
 gui_msg_report -code DVWW028
}
gui_list_set_filter -id ${Wave.1} -list { {Buffer 1} {Input 1} {Others 1} {Linkage 1} {Output 1} {Parameter 1} {All 1} {Aggregate 1} {LibBaseMember 1} {Event 1} {Assertion 1} {Constant 1} {Interface 1} {BaseMembers 1} {Signal 1} {$unit 1} {Inout 1} {Variable 1} }
gui_list_set_filter -id ${Wave.1} -text {*}
gui_list_set_insertion_bar  -id ${Wave.1} -group instruction_memory1  -position in

gui_view_scroll -id ${Wave.1} -vertical -set 0
gui_show_grid -id ${Wave.1} -enable false
# Restore toplevel window zorder
# The toplevel window could be closed if it has no view/pane
if {[gui_exist_window -window ${TopLevel.1}]} {
	gui_set_active_window -window ${TopLevel.1}
	gui_set_active_window -window ${Source.1}
	gui_set_active_window -window ${HSPane.1}
}
if {[gui_exist_window -window ${TopLevel.2}]} {
	gui_set_active_window -window ${TopLevel.2}
	gui_set_active_window -window ${Wave.1}
}
#</Session>

